name: Docker Image CI/CD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -f EduVentureMubarakWebApp/EduVentureMubarakWebApp/Dockerfile -t webapp-image:latest .

      - name: Save Docker image as file
        run: docker save webapp-image:latest | gzip > webapp-image.tar.gz

      - name: Create SSH key file
        run: |
          echo "${{ secrets.PROD_SSH_KEY }}" | sed -e 's/\\n/\n/g' > private_key.pem
          chmod 600 private_key.pem
          ls -l private_key.pem

      - name: Set up SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -p ${{ secrets.SERVER_PORT }} ${{ secrets.PROD_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Ensure target directory exists
        run: ssh -i private_key.pem -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.PROD_SERVER_IP }} "mkdir -p ~/webapp-docker-images && chmod -R 755 ~/webapp-docker-images"

      - name: Check Key and Permissions
        run: ssh -i private_key.pem -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.PROD_SERVER_IP }} "ls -l ~/webapp-docker-images"

      - name: Transfer Docker image to server
        run: scp -i private_key.pem -P ${{ secrets.SERVER_PORT }} webapp-image.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.PROD_SERVER_IP }}:~/webapp-docker-images/webapp-image.tar.gz

      - name: Execute Deployment Script
        run: ssh -i private_key.pem -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.PROD_SERVER_IP }} "./deploy_docker_image"
